plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace rootProject.application_id
    compileSdk rootProject.compile_sdk_version

    defaultConfig {
        applicationId rootProject.application_id
        minSdk rootProject.min_sdk_version
        targetSdk rootProject.target_sdk_version
        versionCode rootProject.code_version
        versionName rootProject.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions = ["environment"]
    productFlavors {
        dev {
            isDefault true
            applicationIdSuffix ".dev"
            dimension "environment"
            resValue("string", "app_name", "Locstock - Dev")
        }
        stagging {
            applicationIdSuffix ".stagging"
            dimension "environment"
            resValue("string", "app_name", "Locstock - Staging")
        }
        production {
            dimension "environment"
            resValue("string", "app_name", "Locstock")
        }
    }
    kotlinOptions {
        jvmTarget = rootProject.jvm_target_version
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility rootProject.java_version
        targetCompatibility rootProject.java_version
    }
    composeOptions {
        kotlinCompilerExtensionVersion rootProject.kotlin_compiler_extension_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // exoplayer
    def media3Version = rootProject.media3_version
    implementation("androidx.media3:media3-exoplayer:$media3Version")
    implementation("androidx.media3:media3-exoplayer-hls:$media3Version")
    implementation("androidx.media3:media3-ui:$media3Version")

    // Gson
    implementation "com.google.code.gson:gson:${rootProject.gson_version}"
    // Hilt
    def hilt_version = rootProject.hilt_version
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-compose:${rootProject.hilt_navigation_compose_version}"

    // Navigation
    implementation "androidx.navigation:navigation-compose:${rootProject.navigation_compose_version}"

    //glide
    implementation "com.github.bumptech.glide:glide:${rootProject.glide_version}"

    // Default
    implementation "androidx.core:core-ktx:${rootProject.core_ktx_version}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.lifecycle_runtime_ktx_version}"
    implementation "androidx.activity:activity-compose:${rootProject.activity_compose_version}"
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-graphics"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material3:material3"
    testImplementation "junit:junit:${rootProject.junit_version}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.test_ext_version}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.espresso_core_version}"
    implementation platform("androidx.compose:compose-bom:${rootProject.compose_bom_version}")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
    implementation implementation(project(":core-desgin-system",))

    implementation(project(":core-network"))
    implementation(project(":core-library"))
}